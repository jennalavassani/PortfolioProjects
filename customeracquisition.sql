-- Creating a new table in PostgreSQL 16 with a customer acquisition data set from Kaggle

CREATE TABLE customer_acquisition (
    customer_id INT PRIMARY KEY,
    channel VARCHAR(255),
    cost DECIMAL(10, 6),
    conversion_rate DECIMAL(10, 6),
    revenue INT
);

-- Diving into an overview of the data

SELECT 
    COUNT(*) AS total_customers, -- Counting total number of customers
    AVG(cost) AS average_cost, -- Calculating the average cost of acquisition
    AVG(conversion_rate) AS average_conversion_rate, -- Calculating the average conversion rate
    AVG(revenue) AS average_revenue -- Calculating the average revenue per customer
FROM customer_acquisition; 

-- Performance analysis by channel

SELECT 
    channel, -- Selecting the marketing channel
    COUNT(*) AS customer_count, -- Counting the number of customers acquired through each channel
    AVG(cost) AS average_cost, -- Calculating the average cost per channel
    AVG(conversion_rate) AS average_conversion_rate, --  Calculating the average conversion rate per channel
    AVG(revenue) AS average_revenue --  Calculating the average revenue per channel
FROM customer_acquisition
GROUP BY channel; -- Grouping the data by channel

-- Taking a look at top revenue-generating customers

SELECT 
    customer_id, -- Selecting the customers ID
    revenue -- Selecting the revenue generated by the customer
FROM customer_acquisition
ORDER BY revenue DESC -- Orders the results by revenue in descending order
LIMIT 10; -- Limiting the results to the top 10 customers, limit can be adjusted

-- Doing an estimate on Customer Lifetime Value (CLV)

SELECT 
    customer_id, -- Selecting the customers ID
    cost, -- Selecting the acquisition cost
    revenue, -- Selecting the revenue
    conversion_rate, -- Selecting the conversion rate
    (revenue - cost) * conversion_rate AS estimated_clv -- Calculating the CLV as (revenue - cost) multiplied by conversion rate
FROM customer_acquisition;

-- Analyzing the cost-effectiveness of channels

SELECT 
    channel, -- Selects the marketing channel
    AVG(cost) AS average_cost, -- Calculating the average cost per channel
    AVG(revenue) AS average_revenue, -- Calculating the average revenue per channel
    AVG(revenue) - AVG(cost) AS average_profit -- Calculating the average profit per channel (revenue - cost)
FROM customer_acquisition
GROUP BY channel -- Grouping the data by channel
ORDER BY average_profit DESC; -- Orders the results by average profit in descending order

-- Checking the correlation between cost and revenue

SELECT 
    CORR(cost, revenue) AS cost_revenue_correlation -- Calculataing the correlation between cost and revenue
FROM customer_acquisition; 

-- Segmenting customers based on conversion rate

SELECT 
    customer_id, -- Selecting customer ID
    conversion_rate, -- Selecting conversion rate
    CASE -- Begins a conditional statement
        WHEN conversion_rate > 0.05 THEN 'High' -- Classifying as 'High' if conversion rate is greater than 0.05
        WHEN conversion_rate BETWEEN 0.02 AND 0.05 THEN 'Medium' -- Classifying as 'Medium' if conversion rate is between 0.02 and 0.05
        ELSE 'Low' -- Classifying as 'Low' in all other cases
    END AS conversion_rate_segment -- Ending the conditional statement and labeling this column as conversion_rate_segment
FROM customer_acquisition;

